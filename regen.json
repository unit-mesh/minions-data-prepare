[
    {
        "instruction": "Create an editable table of most popular high school sports",
        "input": "",
        "output": "Here is an editable table of the most popular high school sports: \n\n| Sport | Number of Students Participating (2019-2020) |\n| ------ | ------ |\n| Basketball | 27,500 |\n| Football | 19,500 |\n| Soccer | 11,500 |\n| Track & Field | 8,700 |\n| Baseball | 7,200 |\n| Volleyball | 6,400 |\n| Tennis | 4,400 |\n| Wrestling | 4,000 |\n| Swimming | 3,900 |\n| Cross Country | 3,600 |\n| Softball | 3,600 |\n| Cheerleading | 2,800 |\n| Golf | 2,600 |\n| Lacrosse | 2,400 |\n| Field Hockey | 2,200 |\n| Track & Field | 2,100 |\n| Gymnastics | 1,800 |\n| Bowling | 1,300 |\n| Ice Hockey | 1,100 |\n| Rugby | 600 |\n| Water Polo | 400 |\n| Skiing | 300 |\n| Fencing | 200 |\n| Dance | 100 |\n| Archery | 100 |\n| Crew | 100 |\n| Badminton | 100 |\n| Ultimate | 100 |\n| Table Tennis | 100 |\n| Table Tennis | 100 |\n| Paintball | 100 |\n| Rowing | 100 |\n| Kickball | 100 |\n| Kiip | 100 |\n| Synchronized Swimming | 100 |\n| Airsoft | 100 |\n| Triathlon | 100 |\n| Off-Road Racing | 100 |\n| Weightlifting | 100 |\n| Powerlifting | 100 |\n| Pickleball | 100 |\n| Snowboarding | 100 |\n| Crossfit | 100 |\n| Special Olympics | 100 |\n| Futsal | 100 |\n| Drumline | 100 |\n| Barbell/Weight Training | 100 |\n| Sailing | 100 |\n| Platform Tennis | 100 |\n| Biathalon | 100 |\n| Parkour | 100 |\n| Mountainbiking | 100 |\n| Beach Volleyball | 100 |\n| Skateboarding | 100 |\n| Yoga | 100 |\n| Pilates | 100 |\n| Cycling | 100 |\n| Disc Golf | 100 |\n| Triathlon | 100 |\n| Equestrian | 100 |\n\n\nThis table can be edited according to the number of Students Participating in each sport. All numbers are approximate based on the 2019-2020 school year data.  The table may also be adjusted to include other popular high school sports.  The available sports can be changed according to the data as it changes from school year to school year.  The table can also be adapted to fit the specific school or district.",
        "most_similar_instructions": {
            "Use Spring + Java to create a api for ": 0.11111111111111112,
            "According follow APIs to create use stories for a Online MovieTicket website. ": 0.0909090909090909,
            "Use given-when-then and AC1,AC2,AC3... to Create use story for": 0.08695652173913043,
            "Use follows format \"User Information\nPOST create_user() /register Create user\nPOST login_user() /login Login user\" to design all api for a": 0.06060606060606061,
            "Write unit test for follow code": 0.0,
            "Write controller test for follow code": 0.0,
            "Use UML to design all Data Structure for": 0.0,
            "Using the comment as a guide, replace the \"TODO\" comment in the code with the proper code.": 0.0,
            "Use PlantUML to design all Data Structure for": 0.0,
            "I working on design software system, could you design a user journal for": 0.0
        },
        "avg_similarity_score": 0.03178025312412664
    },
    {
        "instruction": "Provide a set of web design principles",
        "input": "",
        "output": "Here is a set of web design principles:\n\n1. Make sure the content is easy to find and navigate. \n2. Use simple and clear language that everyone can understand. \n3. Optimize the website for different devices and screen resolutions.\n4. Use colors, icons and images that are consistent with the brand and tone of the website.\n5. Keep the website design minimal, user-friendly and uncluttered.\n6. Use typography that is legible and responsive.\n7. Ensure site accessibility and provide alternative text for all visuals.\n8. Include interactive elements to engage the users.\n9. Make sure all the elements are loading optimally.\n10. Provide contact information, including address, phone number and email. \n11. Guide the users through the website using cues such as pagination and progress bars.\n12. Integrate user feedback and use analytics to understand user behavior. \n13. Ensure the website is secure with SSL encryption.\n14. Optimize the website for search engines. \n15. Add elements that encourage users to explore the website.\n16. Provide an effective error page that gives helpful information.\n17. Use calls to action (CTAs) to guide the users and maximize conversions. \n18. Load content dynamically for smooth user experience. \n19. Be mindful of the loading speed and optimize for faster loading time.",
        "most_similar_instructions": {
            "Use UML to design all Data Structure for": 0.13333333333333333,
            "Use PlantUML to design all Data Structure for": 0.13333333333333333,
            "Use Spring + Java to create a api for ": 0.13333333333333333,
            "Create an editable table of most popular high school sports": 0.11764705882352941,
            "According follow APIs to create use stories for a Online MovieTicket website. ": 0.10526315789473685,
            "I working on design software system, could you design a user journal for": 0.1,
            "Using the comment as a guide, replace the \"TODO\" comment in the code with the proper code.": 0.08333333333333333,
            "Use follows format \"User Information\nPOST create_user() /register Create user\nPOST login_user() /login Login user\" to design all api for a": 0.06666666666666667,
            "Write unit test for follow code": 0.0,
            "Write controller test for follow code": 0.0
        },
        "avg_similarity_score": 0.07274251805985553
    },
    {
        "instruction": "Write a word count program",
        "input": "This is an example string to be used as an input.",
        "output": "Sure! Here's a simple Word Count program written in JavaScript:\n\nfunction wordCount(text) {\n  let count = 0;\n  let words = text.split(' ');\n\n  for (let i = 0; i < words.length; i++) {\n    if (words[i] !== \"\") {\n      count++;\n    }\n  }\n\n  return count;\n}\n\nconsole.log(wordCount(\"This is an example string to be used as an input.\")); // prints 7.",
        "most_similar_instructions": {
            "Write unit test for follow code": 0.1818181818181818,
            "Write controller test for follow code": 0.1818181818181818,
            "Provide a set of web design principles": 0.16666666666666666,
            "Use Spring + Java to create a api for ": 0.15384615384615385,
            "According follow APIs to create use stories for a Online MovieTicket website. ": 0.11764705882352941,
            "I working on design software system, could you design a user journal for": 0.1111111111111111,
            "Using the comment as a guide, replace the \"TODO\" comment in the code with the proper code.": 0.0909090909090909,
            "Use follows format \"User Information\nPOST create_user() /register Create user\nPOST login_user() /login Login user\" to design all api for a": 0.07142857142857142,
            "Create an editable table of most popular high school sports": 0.0,
            "Use UML to design all Data Structure for": 0.0
        },
        "avg_similarity_score": 0.08271115510934515
    },
    {
        "instruction": "Compare the feature between the two software",
        "input": "G Suite and Microsoft Office",
        "output": "Sure. Here are a few key features for comparing G Suite to Microsoft Office: \n1. Office is best for traditional document sharing and editing, while G Suite is more conducive to collaboration and cloud-based document storage. \n2. Office allows for features like using bookmarks and inserting graphics and tables, while G Suite has features like document formatting and revision history tracking.\n3. Office supports more file types (including .docx) and has more powerful features like support for macros, while G Suite offers features like live editing for documents with multiple users. \n4. Office has a more mature program suite, but G Suite offers more customization with add-ons and integrations. \n5. G Suite is generally less expensive and its pricing models are more flexible. \n6. G Suite is optimized for secure, remote collaboration while Office is optimized for single-user document editing and sharing. \n7. Office has better support for web-conferencing programs like Skype, while G Suite has better support for video calling. \n8. Office has a more comprehensive suite of programs, while G Suite is more limited but generally faster. \n9. Office is better for Windows users, while G Suite is better for Mac users. \n10. G Suite has better integration with third-party apps like Google Analytics and Salesforce, while Office has more features for built-in apps.",
        "most_similar_instructions": {
            "Using the comment as a guide, replace the \"TODO\" comment in the code with the proper code.": 0.16666666666666666,
            "I working on design software system, could you design a user journal for": 0.1,
            "Write a word count program": 0.0,
            "Provide a set of web design principles": 0.0,
            "Create an editable table of most popular high school sports": 0.0,
            "Write unit test for follow code": 0.0,
            "Write controller test for follow code": 0.0,
            "Use UML to design all Data Structure for": 0.0,
            "Use PlantUML to design all Data Structure for": 0.0,
            "Use follows format \"User Information\nPOST create_user() /register Create user\nPOST login_user() /login Login user\" to design all api for a": 0.0
        },
        "avg_similarity_score": 0.019047619047619046
    },
    {
        "instruction": "Translate the sentence to Japanese",
        "input": "I will go to the park.",
        "output": "\u79c1\u306f\u516c\u5712\u306b\u884c\u304f\u3064\u3082\u308a\u3067\u3059\u3002 (\"Watashi wa k\u014den ni ikutsu mono de\") Japenese translation for: I will go to the park.",
        "most_similar_instructions": {
            "Compare the feature between the two software": 0.16666666666666666,
            "Use UML to design all Data Structure for": 0.15384615384615385,
            "Use PlantUML to design all Data Structure for": 0.15384615384615385,
            "Use Spring + Java to create a api for ": 0.15384615384615385,
            "Use graphviz format to draw C4 architecture's Container level for": 0.12500000000000003,
            "According follow APIs to create use stories for a Online MovieTicket website. ": 0.11764705882352941,
            "Use given-when-then and AC1,AC2,AC3... to Create use story for": 0.1111111111111111,
            "Using the comment as a guide, replace the \"TODO\" comment in the code with the proper code.": 0.0909090909090909,
            "Use follows format \"User Information\nPOST create_user() /register Create user\nPOST login_user() /login Login user\" to design all api for a": 0.07142857142857142,
            "Write a word count program": 0.0
        },
        "avg_similarity_score": 0.07628673069849541
    },
    {
        "instruction": "Divide the sorted array into two subarray",
        "input": "[1,2,3,4,5,6,7]",
        "output": "Sure! Here's one way to divide the sorted array [1,2,3,4,5,6,7] into two subarrays: [1,2,3,4] and [5,6,7]. You could do this by starting at the middle of the array (index 3) and then splitting the array into two subarrays by copying the elements before the middle index into the first subarray and copying the elements after the middle index into the second subarray.",
        "most_similar_instructions": {
            "Compare the feature between the two software": 0.2857142857142857,
            "Translate the sentence to Japanese": 0.16666666666666666,
            "Using the comment as a guide, replace the \"TODO\" comment in the code with the proper code.": 0.08333333333333333,
            "Write a word count program": 0.0,
            "Provide a set of web design principles": 0.0,
            "Create an editable table of most popular high school sports": 0.0,
            "Write unit test for follow code": 0.0,
            "Write controller test for follow code": 0.0,
            "Use UML to design all Data Structure for": 0.0,
            "Use PlantUML to design all Data Structure for": 0.0
        },
        "avg_similarity_score": 0.033482142857142856
    },
    {
        "instruction": "Create a movie recommendation system",
        "input": "",
        "output": "Sure. Here's an example of how to create a movie recommendation system using a supervised machine learning algorithm. First, be sure to curate a large enough dataset that includes information about the movie's features (such as genre, production year, etc.) and ratings from a diverse set of users. The dataset should be split into training and test datasets. The training dataset will be used to train the model and the test dataset will be used for evaluating the model's accuracy. \n\nNext, select an appropriate supervised machine learning algorithm and apply it to the dataset. This algorithm will learn from the inputted data and come up with a model that can predict the movie ratings of a user based on the features of the movie. Once the model is trained, use the test dataset to evaluate the accuracy of the model. Use metrics such as accuracy, precision, recall and f1-score to determine if the model is performing well.\n\nFinally, use the model to generate movie recommendations for users. In this step, the model is used to predict the ratings of a movie for a user and recommend the highest rated movies to the user. The model can compare the predicted ratings of different movies to generate a list of movie recommendations for the user.",
        "most_similar_instructions": {
            "Use Spring + Java to create a api for ": 0.3076923076923077,
            "According follow APIs to create use stories for a Online MovieTicket website. ": 0.23529411764705882,
            "Write a word count program": 0.20000000000000004,
            "Provide a set of web design principles": 0.16666666666666666,
            "Use follows format \"User Information\nPOST create_user() /register Create user\nPOST login_user() /login Login user\" to design all api for a": 0.14285714285714285,
            "Create an editable table of most popular high school sports": 0.13333333333333333,
            "I working on design software system, could you design a user journal for": 0.1111111111111111,
            "Use given-when-then and AC1,AC2,AC3... to Create use story for": 0.1111111111111111,
            "Using the comment as a guide, replace the \"TODO\" comment in the code with the proper code.": 0.0909090909090909,
            "Use graphviz format to draw C4 architecture's Container level for": 0.0
        },
        "avg_similarity_score": 0.08817499301928369
    },
    {
        "instruction": "Create a daily budget tracker",
        "input": "",
        "output": "Sure, here's an example of how to create a daily budget tracker using the React JavaScript library: First, create a component for the budget tracker which will include a form for entering expenses and a table for displaying the expenses. The form should include fields for the name, amount, and category of the expense and submit button to add the expense to the expense table. The table should also include a \"Remove\" button that allows the user to delete an expense from the table.\n\nNext, create a state variable to store the expenses. This state variable should have an initial value of an empty array and each time an expense is added, the Form component should add the expense to this state variable.\n\nFinally, create a function to calculate the total expenditure and the total savings. This function should loop through the expenses array to calculate the total expenditure and then subtract this from the budget to calculate the total savings.",
        "most_similar_instructions": {
            "Create a movie recommendation system": 0.4000000000000001,
            "Use Spring + Java to create a api for ": 0.3076923076923077,
            "According follow APIs to create use stories for a Online MovieTicket website. ": 0.23529411764705882,
            "Write a word count program": 0.20000000000000004,
            "Provide a set of web design principles": 0.16666666666666666,
            "Use follows format \"User Information\nPOST create_user() /register Create user\nPOST login_user() /login Login user\" to design all api for a": 0.14285714285714285,
            "Create an editable table of most popular high school sports": 0.13333333333333333,
            "I working on design software system, could you design a user journal for": 0.1111111111111111,
            "Use given-when-then and AC1,AC2,AC3... to Create use story for": 0.1111111111111111,
            "Using the comment as a guide, replace the \"TODO\" comment in the code with the proper code.": 0.0909090909090909
        },
        "avg_similarity_score": 0.10549860451821239
    },
    {
        "instruction": "Generate an algorithm to",
        "input": "Detect spam emails",
        "output": "Sure! Here is an example of an algorithm for detecting spam emails:\n\n1. We create a training dataset of spam and non-spam emails.\n2. Using natural language processing techniques, we extract the features from each of the emails. This can include extracting words, phrases, and other patterns.\n3. We create a classifier model, such as a Naive Bayes classifier, which uses a statistical approach to classify emails as either spam or not spam.\n4. We train the model using the training dataset.\n5. We evaluate the model using another set of emails called the test dataset.\n6. We deploy the model and start using it to classify incoming emails.\n7. We continuously monitor the results produced by our model and make changes as needed. This comes in the form of retraining our model with new data and adjusting the parameters used for classification.",
        "most_similar_instructions": {
            "Translate the sentence to Japanese": 0.22222222222222224,
            "Use Spring + Java to create a api for ": 0.16666666666666666,
            "Use PlantUML to design all Data Structure for": 0.16666666666666666,
            "Use UML to design all Data Structure for": 0.16666666666666666,
            "Create an editable table of most popular high school sports": 0.14285714285714288,
            "Use graphviz format to draw C4 architecture's Container level for": 0.13333333333333333,
            "According follow APIs to create use stories for a Online MovieTicket website. ": 0.125,
            "Use given-when-then and AC1,AC2,AC3... to Create use story for": 0.11764705882352941,
            "Use follows format \"User Information\nPOST create_user() /register Create user\nPOST login_user() /login Login user\" to design all api for a": 0.07407407407407408,
            "Using the comment as a guide, replace the \"TODO\" comment in the code with the proper code.": 0.0
        },
        "avg_similarity_score": 0.06921757006896326
    },
    {
        "instruction": "Write a pseudocode for",
        "input": "Scraping a website",
        "output": "Sure! Here is an example of a pseudocode for scraping a website:\n\n1. Initialize a queue of URLs\n2. While there are URLs in the queue:\n    a. Take the next URL from the queue\n    b. Make an HTTP request to the URL\n    c. If the request is successful:\n        i. Parse the HTML from the response\n        ii. Extract the desired information\n        iii. Add any new URLs to the queue\n        iv. Store the information in a database\n3. Output any errors encountered along the way\n4. Done! The data is now available in the database.",
        "most_similar_instructions": {
            "Write a word count program": 0.4444444444444445,
            "Write controller test for follow code": 0.4,
            "Write unit test for follow code": 0.4,
            "Use Spring + Java to create a api for ": 0.3333333333333333,
            "I working on design software system, could you design a user journal for": 0.23529411764705882,
            "Create a movie recommendation system": 0.22222222222222224,
            "Create a daily budget tracker": 0.22222222222222224,
            "Provide a set of web design principles": 0.18181818181818182,
            "Use UML to design all Data Structure for": 0.16666666666666666,
            "Use PlantUML to design all Data Structure for": 0.16666666666666666
        },
        "avg_similarity_score": 0.1658980208244914
    },
    {
        "instruction": "Create a schema for",
        "input": "Open source projects",
        "output": "Sure! Here is an example of a schema for open source projects: \n\nOpen Source Project (\nID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,\nName VARCHAR(255) NOT NULL, \nDescription VARCHAR(1024) NOT NULL, \nLink VARCHAR(255) NOT NULL,\nCategory VARCHAR(128) NOT NULL,\nLicense VARCHAR(255) NOT NULL,\nAuthor VARCHAR(255) NOT NULL,\nCreatedAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP\n)",
        "most_similar_instructions": {
            "Write a pseudocode for": 0.5,
            "Use Spring + Java to create a api for ": 0.5,
            "Create a daily budget tracker": 0.4444444444444445,
            "Create a movie recommendation system": 0.4444444444444445,
            "According follow APIs to create use stories for a Online MovieTicket website. ": 0.25,
            "I working on design software system, could you design a user journal for": 0.23529411764705882,
            "Use given-when-then and AC1,AC2,AC3... to Create use story for": 0.23529411764705882,
            "Write a word count program": 0.22222222222222224,
            "Write controller test for follow code": 0.2,
            "Write unit test for follow code": 0.2
        },
        "avg_similarity_score": 0.2031632181492126
    },
    {
        "instruction": "Create a class in Java to",
        "input": "Represent a car",
        "output": "Sure! Here's an example of a Java class for representing a car: \n\npublic class Car {\n    // Private fields\n    private String make;\n    private String model;\n    private String year;\n    private String color;\n    private int numDoors;\n    private double fuelCapacity;\n    private double fuelLevel;\n    private int speed;\n\n    // Constructors, getters, and setters\n    public Car(String make, String model, String year, String color, int numDoors, double fuelCapacity, double fuelLevel, int speed) {\n        this.make = make;\n        this.model = model;\n        this.year = year;\n        this.color = color;\n        this.numDoors = numDoors;\n        this.fuelCapacity = fuelCapacity;\n        this.fuelLevel = fuelLevel;\n        this.speed = speed;\n    }\n\n    // Other methods\n    public void accelerate(int speedIncrease) {\n        this.speed += speedIncrease;\n    }\n\n    public void decelerate(int speedDecrease) {\n        this.speed = Math.max(0, this.speed - speedDecrease);\n    }\n\n    public void addFuel(double amount) {\n        this.fuelLevel += amount;\n        if (this.fuelLevel > this.fuelCapacity) {\n            this.fuelLevel = this.fuelCapacity;\n        }\n    }\n}",
        "most_similar_instructions": {
            "Create a schema for": 0.4,
            "Create a movie recommendation system": 0.3636363636363636,
            "Create a daily budget tracker": 0.3636363636363636,
            "Use Spring + Java to create a api for ": 0.28571428571428575,
            "According follow APIs to create use stories for a Online MovieTicket website. ": 0.2222222222222222,
            "Generate an algorithm to": 0.2,
            "Write a pseudocode for": 0.2,
            "Write a word count program": 0.1818181818181818,
            "Translate the sentence to Japanese": 0.1818181818181818,
            "Using the comment as a guide, replace the \"TODO\" comment in the code with the proper code.": 0.1739130434782609
        },
        "avg_similarity_score": 0.1637919768627301
    },
    {
        "instruction": "Identify the entities in",
        "input": "A hospital system",
        "output": "Sure! Here are some entities you can identify in a hospital system: \n\n- Patients\n- Clinicians/Nurses/Doctors\n- Departments/Units\n- Buildings/Floors/Wards\n- Equipment/Tools\n- Records/Documents\n- Appointments/Schedules\n- Visiting Policies",
        "most_similar_instructions": {
            "Translate the sentence to Japanese": 0.22222222222222224,
            "Create a class in Java to": 0.2,
            "Using the comment as a guide, replace the \"TODO\" comment in the code with the proper code.": 0.19047619047619047,
            "Divide the sorted array into two subarray": 0.18181818181818182,
            "Compare the feature between the two software": 0.18181818181818182,
            "Write controller test for follow code": 0.0,
            "Use Spring + Java to create a api for ": 0.0,
            "Use given-when-then and AC1,AC2,AC3... to Create use story for": 0.0,
            "Use graphviz format to draw C4 architecture's Container level for": 0.0,
            "Use follows format \"User Information\nPOST create_user() /register Create user\nPOST login_user() /login Login user\" to design all api for a": 0.0
        },
        "avg_similarity_score": 0.04244933810151201
    },
    {
        "instruction": "Create a function in Python to",
        "input": "Perform sentiment analysis",
        "output": "Sure! Here is an example of a Python function for performing sentiment analysis: \n\ndef sentiment_analysis(text):\n    # Initialize the sentiment score\n    sentiment_score = 0\n\n    # Use a library to extract the sentiment from the text\n    sentiment = some_library.get_sentiment(text)\n\n    # Adjust the sentiment score\n    if sentiment == 'positive':\n        sentiment_score += 1\n    elif sentiment == 'negative':\n        sentiment_score -= 1\n    else:\n        sentiment_score += 0\n\n    # Return the sentiment score\n    return sentiment_score",
        "most_similar_instructions": {
            "Create a class in Java to": 0.6666666666666666,
            "Create a schema for": 0.4,
            "Create a movie recommendation system": 0.3636363636363636,
            "Create a daily budget tracker": 0.3636363636363636,
            "Use Spring + Java to create a api for ": 0.28571428571428575,
            "According follow APIs to create use stories for a Online MovieTicket website. ": 0.2222222222222222,
            "Identify the entities in": 0.2,
            "Write a pseudocode for": 0.2,
            "Generate an algorithm to": 0.2,
            "Write a word count program": 0.1818181818181818
        },
        "avg_similarity_score": 0.18625375656861365
    },
    {
        "instruction": "Create a query in SQL to",
        "input": "Calculate the average price of items",
        "output": "Sure! Here is an example of an SQL query for calculating the average price of items: \n\nSELECT AVG(Price) \nFROM Items;",
        "most_similar_instructions": {
            "Create a function in Python to": 0.6666666666666666,
            "Create a class in Java to": 0.6666666666666666,
            "Create a schema for": 0.4,
            "Create a daily budget tracker": 0.3636363636363636,
            "Create a movie recommendation system": 0.3636363636363636,
            "Use Spring + Java to create a api for ": 0.28571428571428575,
            "According follow APIs to create use stories for a Online MovieTicket website. ": 0.2222222222222222,
            "Generate an algorithm to": 0.2,
            "Write a pseudocode for": 0.2,
            "Identify the entities in": 0.2
        },
        "avg_similarity_score": 0.20547027297253578
    },
    {
        "instruction": "Rewrite the following sentence",
        "input": "This coffee tastes great",
        "output": "This coffee has a fantastic flavor.",
        "most_similar_instructions": {
            "Translate the sentence to Japanese": 0.4444444444444445,
            "Identify the entities in": 0.25,
            "Divide the sorted array into two subarray": 0.18181818181818182,
            "Compare the feature between the two software": 0.18181818181818182,
            "Using the comment as a guide, replace the \"TODO\" comment in the code with the proper code.": 0.09523809523809523,
            "Create a query in SQL to": 0.0,
            "Write unit test for follow code": 0.0,
            "Use Spring + Java to create a api for ": 0.0,
            "Use given-when-then and AC1,AC2,AC3... to Create use story for": 0.0,
            "Use graphviz format to draw C4 architecture's Container level for": 0.0
        },
        "avg_similarity_score": 0.04435841935841937
    },
    {
        "instruction": "Develop a list of",
        "input": "Guidelines for making video presentations",
        "output": "Sure! Here is a list of guidelines for making video presentations: \n\n- Establish clear goals for the video presentation. \n- Decide on the target audience for the video.\n- Outline the key points you want to cover in the presentation.\n- Choose an appropriate location to film your presentation. \n- Make sure to use good lighting and a clear sound system.\n- Do a trial run to test the audio and video settings.\n- Dress appropriately and look like you are taking the presentation seriously.\n- Make sure to speak clearly, enunciate your words, and minimize distractions such as background noises.\n- Use short, dynamic sentences and avoid complex descriptions.\n- Use visuals and accompanying audio to reinforce your message.\n- Try to make the presentation entertaining and engaging for your audience.\n- Practice delivering the presentation multiple times before filming it. \n- Keep the video presentation to a reasonable length and avoid long pauses.\n- End on a positive note and thank your audience for their time.",
        "most_similar_instructions": {
            "Provide a set of web design principles": 0.36363636363636365,
            "Create a schema for": 0.25,
            "Write a pseudocode for": 0.25,
            "Write a word count program": 0.22222222222222224,
            "Create a daily budget tracker": 0.22222222222222224,
            "Create a movie recommendation system": 0.22222222222222224,
            "Create a query in SQL to": 0.2,
            "Create a function in Python to": 0.2,
            "Create a class in Java to": 0.2,
            "Use Spring + Java to create a api for ": 0.16666666666666666
        },
        "avg_similarity_score": 0.10562170622083479
    },
    {
        "instruction": "Generate a password for",
        "input": "Email",
        "output": "Sure! Here is an example of a password generated for an email account: \n\nqlB}&A?j3q$3x",
        "most_similar_instructions": {
            "Create a schema for": 0.5,
            "Write a pseudocode for": 0.5,
            "Use Spring + Java to create a api for ": 0.3333333333333333,
            "Develop a list of": 0.25,
            "Generate an algorithm to": 0.25,
            "I working on design software system, could you design a user journal for": 0.23529411764705882,
            "Create a movie recommendation system": 0.22222222222222224,
            "Create a daily budget tracker": 0.22222222222222224,
            "Write a word count program": 0.22222222222222224,
            "Create a class in Java to": 0.2
        },
        "avg_similarity_score": 0.17127636408098595
    },
    {
        "instruction": "List techniques for debugging an AI language model",
        "input": "",
        "output": "Here are some techniques for debugging an AI language model: \n\n1. Inspect the model's inputs and outputs: Check the input data, such as language or type of context, for accuracy and relevance to the model. Also check whether the output of the model matches what you expected.\n\n2. Use debugging tools:Debugging tools such as TensorBoard, Keras Debugging Tools, or other AI language-specific tools can help you detect and solve errors.\n\n3. Analyze the training process: Monitor the training process to check the accuracy and speed of the model, and to identify potential misconfigurations of hyperparameters.\n\n4. Test the model: Test the model in different scenarios to ensure that the model\u2019s output is accurate and consistent.\n\n5. Review model logs: Monitor the log files of the model to check whether there are any errors or exceptions raised while it is running.\n\n6. Perform benchmarks: Compare the model's performance against baseline models to identify potential issues.\n\n7. Use human evaluation: Have humans evaluate the model's output in order to identify issues and to check for accuracy.\n\n8. Examine data sources: Inspect the data sources and analyse how the data was structured, encoded, and processed in order to detect any errors.",
        "most_similar_instructions": {
            "Generate a password for": 0.16666666666666666,
            "Develop a list of": 0.16666666666666666,
            "Create a schema for": 0.16666666666666666,
            "Write a pseudocode for": 0.16666666666666666,
            "Generate an algorithm to": 0.16666666666666666,
            "Write controller test for follow code": 0.14285714285714288,
            "Write unit test for follow code": 0.14285714285714288,
            "Use Spring + Java to create a api for ": 0.125,
            "Use PlantUML to design all Data Structure for": 0.125,
            "Use UML to design all Data Structure for": 0.125
        },
        "avg_similarity_score": 0.07122117957110054
    },
    {
        "instruction": "Explain how a reinforcement learning algorithm can be used to find the optimal solution",
        "input": "",
        "output": "A reinforcement learning algorithm can be used to find the optimal solution by following a trial-and-error approach. This approach works by starting from a randomly initialized state and then taking a series of actions within that state to reach the desired desired state. During this process, the algorithm will be rewarded for taking actions that result in reaching the desired state and penalized for taking the wrong actions. By taking these actions in an iterative process, the algorithm is able to eventually identify the best action available in each state and, thus, eventually converge on the optimal solution. In essence, the reinforcement learning algorithm learns from the rewards and punishments associated with each of its steps and can make adjustments in order to find the most optimal solution.",
        "most_similar_instructions": {
            "Generate an algorithm to": 0.22222222222222224,
            "Create a query in SQL to": 0.2,
            "Create a function in Python to": 0.2,
            "Create a class in Java to": 0.2,
            "Using the comment as a guide, replace the \"TODO\" comment in the code with the proper code.": 0.12903225806451615,
            "Develop a list of": 0.11111111111111112,
            "Rewrite the following sentence": 0.11111111111111112,
            "Identify the entities in": 0.11111111111111112,
            "Create a schema for": 0.11111111111111112,
            "Write a pseudocode for": 0.11111111111111112
        },
        "avg_similarity_score": 0.098551353869973
    },
    {
        "instruction": "Create machine learning system for recommendation system",
        "input": "User Preferences\nUser ID | Movie | Rating\n1  |  The Shawshank Redemption  |  5\n2  |  Inception  |  4\n3  |  The Dark Knight  |  4",
        "output": "Sure, I can create a machine learning system for a recommendation system. A simple approach is to use a collaborative filtering approach. The first step is to create a matrix which contains the user ID, movies they have watched, and ratings they have given the movie. This matrix will then be used to generate a similarity score between each user. Once the similarity scores have been calculated, a recommendation algorithm can be used to recommend movies to each user based on the ratings of similar users. This can be done using either a content-based filtering or a neighborhood-based filtering approach. Additionally, more advanced deep learning models can also be used to generate better recommendations.",
        "most_similar_instructions": {
            "Create a movie recommendation system": 0.5,
            "Create a schema for": 0.36363636363636365,
            "Use Spring + Java to create a api for ": 0.26666666666666666,
            "According follow APIs to create use stories for a Online MovieTicket website. ": 0.2105263157894737,
            "I working on design software system, could you design a user journal for": 0.2,
            "Use given-when-then and AC1,AC2,AC3... to Create use story for": 0.2,
            "Write a pseudocode for": 0.18181818181818182,
            "Generate a password for": 0.18181818181818182,
            "Create a daily budget tracker": 0.16666666666666666,
            "Create a class in Java to": 0.15384615384615383
        },
        "avg_similarity_score": 0.12573202400427008
    },
    {
        "instruction": "List application for natural language processing",
        "input": "",
        "output": "Natural language processing (NLP) is used in a variety of applications including from speech recognition and natural language understanding to information extraction and machine translation. \n\nHere are a few examples of applications of NLP: \n\n1. Text Analysis: Text analysis is used to extract sentiment and topics from large text corpora and applied in customer service, sentiment analysis, and other applications.\n\n2. Dialogue Systems: Dialogue systems, such as chatbots, are used to create interactive conversations between humans and machines.\n\n3. Machine Translation: Machine translation algorithms are used to automatically translate text from one language to another.\n\n4. Information Extraction: Information extraction algorithms are used to automatically identify and extract key information from text documents.\n\n5. Speech Recognition: Speech recognition algorithms are used to convert speech to text and enable voice-controlled interfaces.\n\n6. Named Entity Recognition: Named entity recognition algorithms are used to identify named entities in a given text, such as people, organizations, locations, and dates.\n\n7. Language Modeling: Language modeling algorithms are used to generate natural language text by predicting the next word in a sequence of words.",
        "most_similar_instructions": {
            "List techniques for debugging an AI language model": 0.42857142857142855,
            "Generate a password for": 0.2,
            "Develop a list of": 0.2,
            "Create a schema for": 0.2,
            "Write a pseudocode for": 0.2,
            "Write unit test for follow code": 0.16666666666666666,
            "Write controller test for follow code": 0.16666666666666666,
            "Create machine learning system for recommendation system": 0.15384615384615383,
            "Use Spring + Java to create a api for ": 0.14285714285714288,
            "Use PlantUML to design all Data Structure for": 0.14285714285714288
        },
        "avg_similarity_score": 0.08289288585274493
    },
    {
        "instruction": "Query data with SQL language",
        "input": "Table Name: Orders\nFields: order_id, order_date, customer_name, product_name, quantity",
        "output": "Sure, I can query the data with the SQL language. For example, if I want to get the customer names and the products they ordered from the Orders table, I can use the following query: \nSELECT customer_name, product_name FROM Orders; \nThis query will return all the customer names and the products they ordered from the Orders table.",
        "most_similar_instructions": {
            "Create a query in SQL to": 0.3636363636363636,
            "List application for natural language processing": 0.1818181818181818,
            "List techniques for debugging an AI language model": 0.15384615384615385,
            "Use UML to design all Data Structure for": 0.15384615384615385,
            "Use PlantUML to design all Data Structure for": 0.15384615384615385,
            "Using the comment as a guide, replace the \"TODO\" comment in the code with the proper code.": 0.0909090909090909,
            "Provide a set of web design principles": 0.0,
            "Create an editable table of most popular high school sports": 0.0,
            "Write unit test for follow code": 0.0,
            "Write controller test for follow code": 0.0
        },
        "avg_similarity_score": 0.033269760542487814
    },
    {
        "instruction": "Develop a categorization model.",
        "input": "Sentences:\n1. I bought a new dress.\n2. My dog is barking.\n3. I ate a sandwich for lunch.\n\nCategories: Shopping, Pets, Eating",
        "output": "Sure, I can develop a categorization model utilizing a supervised approach. \n\nThe first step will be to prepare the training data. For each sentence, I will need to label it with one of the given categories as labels. For example, sentence 1 would be labeled as Shopping, sentence 2 as Pets, and sentence 3 as Eating.\n\nNext, the model will need to be trained with the labeled dataset. This can be done using a machine learning algorithm such as a neural network. \n\nFinally, the model can be tested by presenting it with unlabeled sentences and evaluating its performance in correctly categorizing these sentences.",
        "most_similar_instructions": {
            "Develop a list of": 0.5,
            "Write a pseudocode for": 0.25,
            "Generate a password for": 0.25,
            "Create a schema for": 0.25,
            "Write a word count program": 0.22222222222222224,
            "Create a movie recommendation system": 0.22222222222222224,
            "Create a daily budget tracker": 0.22222222222222224,
            "Create a class in Java to": 0.2,
            "Create a query in SQL to": 0.2,
            "Create a function in Python to": 0.2
        },
        "avg_similarity_score": 0.10455554473720563
    },
    {
        "instruction": "Construct a neural network for sentiment analysis",
        "input": "Reviews:\n1. The product was terrible.\n2. I really liked the product.\n3. It was okay but not great.\n\nLabels: Negative, Positive, Neutral",
        "output": "Sure, I can construct a neural network for sentiment analysis. The neural network can be composed of an input layer, an output layer, and one or more hidden layers. \n\nThe input layer will receive the reviews and feed them into the network. The hidden layers will consist of one or more layers of neurons with weights, biases, and activation functions. The output layer will use an activation function such as a sigmoid layer to generate output in the form of probabilities.\n\nThe neural network will be trained by providing the labeled reviews to the input layer. The output layer will learn to assign the correct label to each review by adjusting the weights and biases of the hidden layers based on the error rate between the predicted range and the expected output.\n\nOnce the network has been trained, it can be used to evaluate the sentiment of unlabeled reviews by presenting them to the network and calculating the output probability for each of the labels, to determine the sentiment of the review.",
        "most_similar_instructions": {
            "Create a schema for": 0.36363636363636365,
            "Generate a password for": 0.36363636363636365,
            "Write a pseudocode for": 0.36363636363636365,
            "Use Spring + Java to create a api for ": 0.26666666666666666,
            "I working on design software system, could you design a user journal for": 0.2,
            "Develop a categorization model.": 0.18181818181818182,
            "Develop a list of": 0.18181818181818182,
            "Write a word count program": 0.16666666666666666,
            "Create a daily budget tracker": 0.16666666666666666,
            "Create a movie recommendation system": 0.16666666666666666
        },
        "avg_similarity_score": 0.13118901983563638
    },
    {
        "instruction": "Generate an API documentation",
        "input": "API users should be able to create an account.",
        "output": "Sure, I can generate an API documentation for creating an account. Here is an example of an API endpoint documentation: \n\nName: Create an Account\n\nDescription: This endpoint enables users to create an account.\n\nEndpoint: POST /account\n\nParameters: \n- username (string, required) - Username of the new account\n- email (string, required) - Email address of the new account\n- password (string, required) - Password of the new account\n- firstname (string, optional) - Firstname of the new account\n- lastname (string, optional) - Lastname of the new account\n\nReturns: Newly created account ID (integer)",
        "most_similar_instructions": {
            "Generate an algorithm to": 0.5,
            "Generate a password for": 0.25,
            "Use Spring + Java to create a api for ": 0.16666666666666666,
            "List techniques for debugging an AI language model": 0.16666666666666666,
            "Create an editable table of most popular high school sports": 0.14285714285714288,
            "Use follows format \"User Information\nPOST create_user() /register Create user\nPOST login_user() /login Login user\" to design all api for a": 0.07407407407407408,
            "Construct a neural network for sentiment analysis": 0.0,
            "Write controller test for follow code": 0.0,
            "Write a word count program": 0.0,
            "Provide a set of web design principles": 0.0
        },
        "avg_similarity_score": 0.03611845972957084
    },
    {
        "instruction": "Generate all 3rd normal form",
        "input": "Table 1: Sales\n+---------+------------+--------+---------+--------+---------+\n| Sale_Id | Product_Id | Buyer  | Date    | Amount | Currency|\n+---------+------------+--------+---------+--------+---------+\n|  1      |     P1     | John   | 1/2/2020|  500   |  USD    |\n|  2      |     P1     | Mary   | 2/2/2020|  300   |  EUR    |\n|  3      |     P2     | Mary   | 2/3/2020|  200   |  EUR    |\n+---------+------------+--------+---------+--------+---------+\nTable 2: Products\n+------------+-----------+-----------------+\n| Product_Id | Name      | Category        |\n+------------+-----------+-----------------+\n|     P1     | Chair     | Furniture        |\n|     P2     | TV        | Home Entertainment|\n+------------+-----------+-----------------+",
        "output": "Sure, here are the finalized tables in 3rd Normal Form (3NF): \n\nTable 1: Sales\n+---------+------------+--------+---------+--------+---------+\n| Sale_Id | Buyer      | Date   | Amount  | Currency|\n+---------+------------+--------+---------+--------+---------+\n|  1      |     John   | 1/2/2020| 500   | USD    |\n|  2      |     Mary   | 2/2/2020| 300   | EUR    |\n|  3      |     Mary   | 2/3/2020| 200   | EUR    |\n+---------+------------+--------+---------+--------+---------+\n\nTable 2: Products\n+------------+-----------+-----------------+\n| Product_Id | Name      | Category        |\n+------------+-----------+-----------------+\n|     P1     | Chair     | Furniture        |\n|     P2     | TV        | Home Entertainment|\n+------------+-----------+-----------------+\n\nTable 3: Sales_Products\n+---------+------------+\n| Sale_Id | Product_Id |\n+---------+------------+\n|    1    |      P1    |\n|    2    |      P1    |\n|    3    |      P2    |\n+---------+------------+\n\nExplanation: \nThe main goal of 3NF is to eliminate any transitive dependencies between fields to store information clearly and avoid redundant data.\nWe can see that in the tables above, the Buyer, Date, Amount and Currency fields are stored in the Sales table, while the Product_Id and Name fields are stored in the Products table. \nThe Sales_Products table stores the relationship between the sales and products tables by storing the Sale_Id and Product_Id.",
        "most_similar_instructions": {
            "Generate an API documentation": 0.22222222222222224,
            "Generate an algorithm to": 0.22222222222222224,
            "Generate a password for": 0.22222222222222224,
            "Use PlantUML to design all Data Structure for": 0.15384615384615385,
            "Use UML to design all Data Structure for": 0.15384615384615385,
            "Use follows format \"User Information\nPOST create_user() /register Create user\nPOST login_user() /login Login user\" to design all api for a": 0.07142857142857142,
            "Write unit test for follow code": 0.0,
            "Compare the feature between the two software": 0.0,
            "Write a word count program": 0.0,
            "Provide a set of web design principles": 0.0
        },
        "avg_similarity_score": 0.028264528264528264
    },
    {
        "instruction": "Describe the best approach \"Serverless\" for",
        "input": "handling scaling for a web application",
        "output": "Serverless is the best approach for handling scaling for a web application. Serverless solutions allow developers to break down the code they want to deploy into individual functions. These functions can be combined and orchestrated in different ways, each suited to different tasks. When deploying to a Serverless architecture, each function can scale independently according to the changing requirements of the application. This allows the application to automatically scale in a cost-effective way, without any manual intervention. Additionally, Serverless solutions are ready to scale right away and do not require any initial effort to configure a server when the first deployment is done. This eliminates the hassle of having to manage multiple servers, making it a more efficient approach.",
        "most_similar_instructions": {
            "Generate a password for": 0.2,
            "Rewrite the following sentence": 0.2,
            "Create a schema for": 0.2,
            "Identify the entities in": 0.2,
            "Write a pseudocode for": 0.2,
            "Translate the sentence to Japanese": 0.1818181818181818,
            "List application for natural language processing": 0.16666666666666666,
            "Write controller test for follow code": 0.16666666666666666,
            "Write unit test for follow code": 0.16666666666666666,
            "Create machine learning system for recommendation system": 0.15384615384615383
        },
        "avg_similarity_score": 0.09378520771936821
    },
    {
        "instruction": "Rewrite this sentence in a passive voice",
        "input": "They built the bridge.",
        "output": "The bridge was built by them.",
        "most_similar_instructions": {
            "Rewrite the following sentence": 0.36363636363636365,
            "Identify the entities in": 0.18181818181818182,
            "Write a pseudocode for": 0.18181818181818182,
            "Develop a categorization model.": 0.18181818181818182,
            "Create a schema for": 0.18181818181818182,
            "Generate a password for": 0.18181818181818182,
            "Develop a list of": 0.18181818181818182,
            "Create a movie recommendation system": 0.16666666666666666,
            "Write a word count program": 0.16666666666666666,
            "Translate the sentence to Japanese": 0.16666666666666666
        },
        "avg_similarity_score": 0.08852049884438548
    },
    {
        "instruction": "Change the following sentence according to the active voice",
        "input": "The bread was eaten by the little girl.",
        "output": "The little girl ate the bread.",
        "most_similar_instructions": {
            "Rewrite the following sentence": 0.46153846153846156,
            "Translate the sentence to Japanese": 0.42857142857142855,
            "Rewrite this sentence in a passive voice": 0.25,
            "Compare the feature between the two software": 0.25,
            "According follow APIs to create use stories for a Online MovieTicket website. ": 0.1904761904761905,
            "Explain how a reinforcement learning algorithm can be used to find the optimal solution": 0.17391304347826086,
            "Generate an algorithm to": 0.15384615384615383,
            "Using the comment as a guide, replace the \"TODO\" comment in the code with the proper code.": 0.15384615384615383,
            "Identify the entities in": 0.15384615384615383,
            "Create a query in SQL to": 0.13333333333333333
        },
        "avg_similarity_score": 0.08701802965789537
    },
    {
        "instruction": "Expand the following abbreviation",
        "input": "AI",
        "output": "AI stands for Artificial Intelligence.",
        "most_similar_instructions": {
            "Rewrite the following sentence": 0.5,
            "Change the following sentence according to the active voice": 0.30769230769230765,
            "Identify the entities in": 0.25,
            "Translate the sentence to Japanese": 0.22222222222222224,
            "Describe the best approach \"Serverless\" for": 0.2,
            "Compare the feature between the two software": 0.18181818181818182,
            "Divide the sorted array into two subarray": 0.18181818181818182,
            "Explain how a reinforcement learning algorithm can be used to find the optimal solution": 0.11111111111111112,
            "Using the comment as a guide, replace the \"TODO\" comment in the code with the proper code.": 0.09523809523809523,
            "I working on design software system, could you design a user journal for": 0.0
        },
        "avg_similarity_score": 0.049997563412197556
    },
    {
        "instruction": "Generate a data model for",
        "input": "a blog website",
        "output": "Sure, here's a data model for a blog website: @startuml\n\nclass User {\n  -username: string\n  -password: string\n  -email: string\n}\n\nclass Post {\n  -title: string\n  -body: string\n  -date: date\n  -author: User\n  -comments: Comment[]\n}\n\nclass Comment {\n  -body: string\n  -date: date\n  -post: Post\n  -author: User\n}\n\nUser *- Post \nPost *- Comment \nUser *- Comment\n\n@enduml\n\nExplanation: \nThis data model shows the relationship between the User, Post and Comment classes. Each Post is written by one User, and each Comment is written by one User and associated with one Post. The arrows in the model show the direction of the relationship between the classes.",
        "most_similar_instructions": {
            "Generate a password for": 0.6666666666666665,
            "Write a pseudocode for": 0.4444444444444445,
            "Create a schema for": 0.4444444444444445,
            "Develop a categorization model.": 0.4444444444444445,
            "Construct a neural network for sentiment analysis": 0.3333333333333333,
            "Use Spring + Java to create a api for ": 0.3076923076923077,
            "Use UML to design all Data Structure for": 0.3076923076923077,
            "Use PlantUML to design all Data Structure for": 0.3076923076923077,
            "Generate an algorithm to": 0.22222222222222224,
            "Develop a list of": 0.22222222222222224
        },
        "avg_similarity_score": 0.1831721800485622
    },
    {
        "instruction": "Name the common figure of speech used in the following phrase",
        "input": "For whom the bell tolls",
        "output": "The phrase \"For whom the bell tolls\" is an example of alliteration.  Alliteration is a figure of speech that involves the repetition of consonant sounds at the beginning of words. In this phrase, the consonant sound 'b' is repeated at the start of each word.",
        "most_similar_instructions": {
            "Rewrite the following sentence": 0.26666666666666666,
            "Identify the entities in": 0.26666666666666666,
            "Expand the following abbreviation": 0.26666666666666666,
            "Compare the feature between the two software": 0.2222222222222222,
            "Using the comment as a guide, replace the \"TODO\" comment in the code with the proper code.": 0.21428571428571427,
            "Change the following sentence according to the active voice": 0.19999999999999998,
            "Explain how a reinforcement learning algorithm can be used to find the optimal solution": 0.16,
            "Develop a list of": 0.13333333333333333,
            "Translate the sentence to Japanese": 0.12500000000000003,
            "Create a query in SQL to": 0.11764705882352942
        },
        "avg_similarity_score": 0.06404653334201899
    },
    {
        "instruction": "Regroup the following numbers",
        "input": "63 - 25",
        "output": "The regrouped version of the equation 63 - 25 is 38.",
        "most_similar_instructions": {
            "Expand the following abbreviation": 0.5,
            "Rewrite the following sentence": 0.5,
            "Change the following sentence according to the active voice": 0.30769230769230765,
            "Name the common figure of speech used in the following phrase": 0.26666666666666666,
            "Identify the entities in": 0.25,
            "Translate the sentence to Japanese": 0.22222222222222224,
            "Describe the best approach \"Serverless\" for": 0.2,
            "Divide the sorted array into two subarray": 0.18181818181818182,
            "Compare the feature between the two software": 0.18181818181818182,
            "Explain how a reinforcement learning algorithm can be used to find the optimal solution": 0.11111111111111112
        },
        "avg_similarity_score": 0.0640128810583356
    },
    {
        "instruction": "Find the circumference of this circle",
        "input": "Radius = 5",
        "output": "The circumference of a circle with a radius of 5 is 31.4159. This can be calculated by multiplying the radius (r) by 2\u03c0 (approximately 6.2832). In this case, 5 x 6.2832 = 31.4159.",
        "most_similar_instructions": {
            "Name the common figure of speech used in the following phrase": 0.23529411764705885,
            "Regroup the following numbers": 0.2,
            "Explain how a reinforcement learning algorithm can be used to find the optimal solution": 0.2,
            "Expand the following abbreviation": 0.2,
            "Identify the entities in": 0.2,
            "Rewrite the following sentence": 0.2,
            "Develop a list of": 0.2,
            "Translate the sentence to Japanese": 0.1818181818181818,
            "Describe the best approach \"Serverless\" for": 0.16666666666666666,
            "Compare the feature between the two software": 0.15384615384615383
        },
        "avg_similarity_score": 0.06098785414642193
    },
    {
        "instruction": "What is the name of the general rule used for this series of numbers",
        "input": "1, 4, 7, 10",
        "output": "The general rule used in this series of numbers is an arithmetic sequence. An arithmetic sequence is a sequence of numbers where each number after the first is obtained by adding a fixed number (called the common difference) to the previous one. In this case, the common difference is 3 (4 - 1 = 3, 7 - 4 = 3, 10 - 7 = 3).",
        "most_similar_instructions": {
            "Find the circumference of this circle": 0.3,
            "Name the common figure of speech used in the following phrase": 0.23999999999999996,
            "Regroup the following numbers": 0.22222222222222224,
            "Describe the best approach \"Serverless\" for": 0.2,
            "Compare the feature between the two software": 0.19047619047619047,
            "Change the following sentence according to the active voice": 0.17391304347826086,
            "Using the comment as a guide, replace the \"TODO\" comment in the code with the proper code.": 0.12903225806451615,
            "Develop a list of": 0.11111111111111112,
            "Generate a password for": 0.11111111111111112,
            "Identify the entities in": 0.11111111111111112
        },
        "avg_similarity_score": 0.08907960503309706
    },
    {
        "instruction": "What is the output for the following code",
        "input": "a = 10\nb = 5\nif (a > b):\n    print(\"a is greater than b\")\nelse:\n    print(\"a is not greater than b\")",
        "output": "a is greater than b.",
        "most_similar_instructions": {
            "What is the name of the general rule used for this series of numbers": 0.36363636363636365,
            "Regroup the following numbers": 0.3333333333333333,
            "Expand the following abbreviation": 0.3333333333333333,
            "Rewrite the following sentence": 0.3333333333333333,
            "Name the common figure of speech used in the following phrase": 0.3157894736842105,
            "Write controller test for follow code": 0.28571428571428575,
            "Describe the best approach \"Serverless\" for": 0.28571428571428575,
            "Write unit test for follow code": 0.28571428571428575,
            "Compare the feature between the two software": 0.26666666666666666,
            "Using the comment as a guide, replace the \"TODO\" comment in the code with the proper code.": 0.24
        },
        "avg_similarity_score": 0.12744185759920623
    },
    {
        "instruction": "Explain the differences between",
        "input": "Arrays and Linked Lists",
        "output": "Arrays and Linked Lists are two different data structures that are often used for storing data. Arrays are sequences of elements that are stored in a contiguous block of memory. This means that the elements in an array are stored in a specific order, and they can be accessed randomly by index. Linked Lists, on the other hand, are non-contiguous data structures. Linked Lists store data in nodes, which point to the next node in the list. This makes adding and removing elements in a Linked List more efficient than with an array, but elements can only be accessed sequentially.\n\nIn short, Arrays are better suited for storing data that can be accessed randomly, while Linked Lists are better for adding and removing elements from the list.",
        "most_similar_instructions": {
            "Compare the feature between the two software": 0.36363636363636365,
            "Identify the entities in": 0.25,
            "Regroup the following numbers": 0.25,
            "Expand the following abbreviation": 0.25,
            "Rewrite the following sentence": 0.25,
            "Explain how a reinforcement learning algorithm can be used to find the optimal solution": 0.22222222222222224,
            "Translate the sentence to Japanese": 0.22222222222222224,
            "Find the circumference of this circle": 0.2,
            "Describe the best approach \"Serverless\" for": 0.2,
            "Divide the sorted array into two subarray": 0.18181818181818182
        },
        "avg_similarity_score": 0.0635436322936323
    },
    {
        "instruction": "Solve the following equation",
        "input": "3x + 4 = 14",
        "output": "The solution for the equation 3x + 4 = 14 is x = 4. This can be solved by subtracting 4 from both sides of the equation, giving us 3x = 10. Dividing both sides of the equation by 3 gives us x = 4.",
        "most_similar_instructions": {
            "Regroup the following numbers": 0.5,
            "Expand the following abbreviation": 0.5,
            "Rewrite the following sentence": 0.5,
            "What is the output for the following code": 0.3333333333333333,
            "Change the following sentence according to the active voice": 0.30769230769230765,
            "Name the common figure of speech used in the following phrase": 0.26666666666666666,
            "Explain the differences between": 0.25,
            "Identify the entities in": 0.25,
            "Translate the sentence to Japanese": 0.22222222222222224,
            "Find the circumference of this circle": 0.2
        },
        "avg_similarity_score": 0.08593900430635125
    },
    {
        "instruction": "Classify the following phrase",
        "input": "Yesterday is history",
        "output": "The phrase \"Yesterday is history\" is a proverb. Proverbs are short, memorable phrases that often contain life lessons and wise advice.",
        "most_similar_instructions": {
            "Solve the following equation": 0.5,
            "Rewrite the following sentence": 0.5,
            "Regroup the following numbers": 0.5,
            "Expand the following abbreviation": 0.5,
            "Name the common figure of speech used in the following phrase": 0.39999999999999997,
            "What is the output for the following code": 0.3333333333333333,
            "Change the following sentence according to the active voice": 0.30769230769230765,
            "Explain the differences between": 0.25,
            "Identify the entities in": 0.25,
            "Translate the sentence to Japanese": 0.22222222222222224
        },
        "avg_similarity_score": 0.09688689088689088
    }
]